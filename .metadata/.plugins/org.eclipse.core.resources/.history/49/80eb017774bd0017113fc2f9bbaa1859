package firebase;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.tasks.Task;
import com.google.firebase.tasks.Tasks;

import model.Code;
import model.User;


class ProductCode
{
	Code code;
	public void savepCode()
	{
		final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("CMP/");

        DatabaseReference usersRef = ref.child("Product");

        Map<String, Code> codes = new HashMap<String, Code>();
        codes.put("Count", new Code("1"));
        

        usersRef.setValue(codes);
        
        System.out.println("Log : putData");
        
        Task<Void> task = usersRef.setValue(codes);
        
        try 
        {
        	System.out.println("Log : await");
           Tasks.await(task);
        } 
        
        catch (ExecutionException e) 
        {
        	e.printStackTrace();
        }
        
        catch(InterruptedException e)
        {
        	e.printStackTrace();
        }
	}
	public void getpCode()
	{
		final FirebaseDatabase database = FirebaseDatabase.getInstance();
		DatabaseReference ref = database.getReference("CMP/Product");
		System.out.println("getpCode");
		
		ref.addValueEventListener(new ValueEventListener() 
		{	 
		    public void onDataChange(DataSnapshot dataSnapshot) 
		    {
		    	code = dataSnapshot.getValue(Code.class);
		        System.out.println("제발요" + code);
		        System.out.println(code.productCode);
		    }

		    public void onCancelled(DatabaseError databaseError) 
		    {
		        System.out.println("The read failed: " + databaseError.getCode());
		    }
		});
		
		try 
		{
			Thread.sleep(2000);
		} 
		catch (InterruptedException e) 
		{
			e.printStackTrace();
		}
	} // end of getpCode
} // end of ProductCode

public class Pratice
{

	public static void main(String args[])
	{
		DB db = new DB();
		ProductCode pc = new ProductCode();
		db.connectDB();
		pc.getpCode();

	} // end of main
	
} // end of Pratice