package inputItem;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Cursor;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Panel;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

import firebase.DB;

public class UploadItemGUI extends JFrame{
	
	String fileAdress;
	FileInputStream fis = null;
	FileOutputStream fos = null; 
	JTextArea productName;
	JTextArea productPrice;
	JTextArea productStock;
	JTextArea ta2;
	JScrollPane productDescription;
	 File selectedFile;
	 JTextArea ta1;
	 int pCode;
	 
	public UploadItemGUI(){
		super("상품등록");
		
		
		JFrame frame = new JFrame();
		frame.setBounds(0, 0, 1024, 768);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
	
		frame.setContentPane(new JLabel(new ImageIcon("form-01.jpg")));
	
		
		ta1=new JTextArea("",1,20);
		ta1.setBounds(340, 182, 250, 20);
		frame.getContentPane().add(ta1);
		ta1.setColumns(20);
		ta1.setOpaque(false);
		ta1.setBorder(new LineBorder(Color.white, 1));
		ta1.setForeground(Color.white);
		JButton addImg = new JButton(new ImageIcon("addimg1.png"));
		addImg.setBounds(610, 180, 60, 25);
		addImg.setOpaque(false);
		addImg.setBorderPainted(false);
		addImg.setContentAreaFilled(false);
		addImg.setFocusPainted(false);
		addImg.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		frame.getContentPane().add(addImg);
		addImg.addMouseListener(new java.awt.event.MouseAdapter() { //첨부 버튼을 누른 경우
	            public void mouseClicked(java.awt.event.MouseEvent evt) {
	                addImgMouseClicked(evt);
	            }
	        });
		
		JLabel productN=new JLabel("상품 이름");
		productN.setBounds(340, 230, 70, 20);
		productN.setForeground(Color.WHITE);
		productN.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		frame.getContentPane().add(productN);
		productName=new JTextArea("",1,20);
		productName.setOpaque(false);
		productName.setBorder(new LineBorder(Color.white, 1));
		productName.setForeground(Color.white);
		productName.setBounds(410, 230, 260, 20);
		frame.getContentPane().add(productName);
		
		
		JLabel productP=new JLabel("상품 가격");
		productP.setBounds(340, 275, 70, 20);
		productP.setForeground(Color.WHITE);
		productP.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		frame.getContentPane().add(productP);
		productPrice=new JTextArea("",1,10);
		productPrice.setOpaque(false);
		productPrice.setBorder(new LineBorder(Color.white, 1));
		productPrice.setForeground(Color.white);
		productPrice.setBounds(410, 275, 260, 20);
		frame.getContentPane().add(productPrice);
		
		JLabel productS=new JLabel("상품 재고");
		productS.setBounds(340, 320, 70, 20);
		productS.setForeground(Color.WHITE);
		productS.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		frame.getContentPane().add(productS);
		productStock=new JTextArea("",1,10);
		productStock.setOpaque(false);
		productStock.setBorder(new LineBorder(Color.white, 1));
		productStock.setForeground(Color.white);
		productStock.setBounds(410, 320, 260, 20);
		frame.getContentPane().add(productStock);
		
		
		JLabel productD=new JLabel("상품 설명");
		productD.setBounds(340, 370, 70, 20);
		productD.setForeground(Color.WHITE);
		productD.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		frame.getContentPane().add(productD);
		
		ta2=new JTextArea("",7,20);
		ta2.setLineWrap(true);        //활성화, 자동 줄 바꿈 기능 
		ta2.setWrapStyleWord(true);
		ta2.setOpaque(false);
		ta2.setBorder(new LineBorder(Color.white, 1));
		ta2.setForeground(Color.white);
		ta2.setBackground(new Color(0,0,0,0));
	///	ta2.setBackground(new Color(red, green, blue, alpha));

		JScrollPane productDescription=new JScrollPane(ta2);
		productDescription.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		productDescription.getViewport().setOpaque(false);
		productDescription.setOpaque(false);
		productDescription.setBounds(410, 370, 260, 150);
		frame.getContentPane().add(productDescription);
		
		JButton save = new JButton(new ImageIcon("save1.png"));
		save.setBounds(340, 535, 160, 25);
		save.setOpaque(false);
		save.setBorderPainted(false);
		save.setContentAreaFilled(false);
		save.setFocusPainted(false);
		save.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		frame.getContentPane().add(save);
		save.addMouseListener(new java.awt.event.MouseAdapter() { //첨부 버튼을 누른 경우
            public void mouseClicked(java.awt.event.MouseEvent evt) {
					saveMouseClicked(evt);
				
            }
        });

		JButton cancle = new JButton(new ImageIcon("cancle2.png"));
		cancle.setBounds(510, 535, 160, 25);
		cancle.setOpaque(false);
		cancle.setBorderPainted(false);
		cancle.setContentAreaFilled(false);
		cancle.setFocusPainted(false);
		frame.getContentPane().add(cancle);
		cancle.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		frame.getContentPane().add(cancle);
		cancle.addMouseListener(new java.awt.event.MouseAdapter() { //취소 버튼을 누른 경우
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                	cancleMouseClicked(evt);
            }
        });
	
		frame.setVisible(true);
		
	}
	
	  private void addImgMouseClicked(java.awt.event.MouseEvent evt) {  //첨부 버튼을 클릭할 경우
		  JFileChooser fileChooser = new JFileChooser(); //파일선택창
	        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
	        int result = fileChooser.showOpenDialog(this);
	        if (result == JFileChooser.APPROVE_OPTION) {
	            selectedFile = fileChooser.getSelectedFile();
	            fileAdress=selectedFile.getAbsolutePath();
	            System.out.println("Selected file: " + fileAdress);
	            FileCopy.copy(fileAdress);
	            ta1.setText(fileAdress);
	        } 
	    }                      
	  private void saveMouseClicked(java.awt.event.MouseEvent evt) {
		  
		  DB db;
		  UploadItem upItem;
		  try{
			  
			  if (selectedFile.getName().equals("")||productName.getText().equals("") ||
					  productPrice.getText().equals("")||productStock.getText().equals("")||
					  ta2.getText().equals("")){
				  JOptionPane.showMessageDialog(null, "모든 항목을 입력해주세요");
			     }
		    else{
		    	String pAdress="menuImg/"+selectedFile.getName();
				  String pName=productName.getText();
				  String pPrice=productPrice.getText();
				  String pStock=productStock.getText();
				  String pDescription=ta2.getText();
				  
				 
				
				 db = new DB();
				 upItem = new UploadItem();
				 
				 db.connectDB();
				 upItem.getProductCode();
				 //upItem.uploadItemData(pAdress, pName, pPrice, pStock, pDescription);
				  
				  System.out.println("복사된 위치 :"+pAdress); //이미지가 복사된 위치
				  System.out.println("상품 이름"+pName); //상품 이름
				  System.out.println("상품 가격"+pPrice); //상품 가격
				  System.out.println("상품 재고"+pStock); //상품 재고
				  System.out.println("상품 설명"+pDescription); //상품설명
				  
				  //JOptionPane.showMessageDialog(null, "업로드가 완료되었습니다");
				  
				 // System.exit(0); //저장을 완료하면 창닫기
		 }
		  }catch(java.lang.NullPointerException nu){
			  JOptionPane.showMessageDialog(null, "모든 항목을 입력해주세요");
		  }catch(Exception n){
			  System.out.println("오류");
			  n.printStackTrace();
		  }
	  }
	  private void cancleMouseClicked(java.awt.event.MouseEvent evt) {  
			  System.exit(0); //취소버튼을 누르면 창닫기
	  }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new UploadItemGUI();
		
	}
	
}
